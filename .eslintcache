[{"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/index.js":"1","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/reportWebVitals.js":"2","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/App/App.js":"3","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/Home/index.js":"4","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/StartForm/index.js":"5","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/api/exam.js":"6","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/helpers/messages.js":"7","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/Questions/index.js":"8","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/contexts/ExamContext.js":"9"},{"size":513,"mtime":1610095235676,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1610094408205,"results":"12","hashOfConfig":"11"},{"size":1546,"mtime":1610112253048,"results":"13","hashOfConfig":"11"},{"size":425,"mtime":1610100186562,"results":"14","hashOfConfig":"11"},{"size":1673,"mtime":1610110584418,"results":"15","hashOfConfig":"11"},{"size":1296,"mtime":1610122901936,"results":"16","hashOfConfig":"11"},{"size":135,"mtime":1610107365297,"results":"17","hashOfConfig":"11"},{"size":2688,"mtime":1610123071514,"results":"18","hashOfConfig":"11"},{"size":100,"mtime":1610108791731,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"27unbn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/index.js",[],["43","44"],"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/reportWebVitals.js",[],"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/App/App.js",[],"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/Home/index.js",[],"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/StartForm/index.js",["45"],"import React, { useContext } from \"react\";\nimport { Form, Container } from \"react-bootstrap\";\nimport \"./startForm.scss\";\n\nimport { showErrorMessage } from \"../../helpers/messages\";\nimport ExamContext from \"../../contexts/ExamContext\";\n\n/**\n * \n\tcheck(\"candidateName\")\n * check(\"name\")\n */\nfunction StartForm(props) {\n\tconst { candidateName, name } = props.formData;\n\tconst { errorMsg } = props;\n\n\tconst exam = useContext(ExamContext);\n\n\tconst showForm = () => {\n\t\treturn (\n\t\t\t<Form onSubmit={props.handleSubmit}>\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label>What's your name?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tid='candidateName'\n\t\t\t\t\t\tonChange={props.handleFormChange}\n\t\t\t\t\t\tvalue={candidateName}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Your name'\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Text className='text-muted'>\n\t\t\t\t\t\tWe'll show your score with your name\n\t\t\t\t\t</Form.Text>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label>What's the name of your journey?</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\tid='name'\n\t\t\t\t\t\tonChange={props.handleFormChange}\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Name of your journey'\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Text className='text-muted'>Just type this</Form.Text>\n\t\t\t\t</Form.Group>\n\t\t\t\t<button className='btn-submit' type='submit'>\n\t\t\t\t\tStart\n\t\t\t\t</button>\n\t\t\t</Form>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div className='starter-form'>\n\t\t\t<Container>\n\t\t\t\t<h1 className='text-center'>Quiz Starter</h1>\n\t\t\t\t<p className='text-center'>\n\t\t\t\t\tTo start a new quiz please fill the form\n\t\t\t\t</p>\n\t\t\t\t<div className='mt-4'>{showForm()}</div>\n\t\t\t\t{errorMsg && (\n\t\t\t\t\t<div className='mt-3'>{showErrorMessage(errorMsg)}</div>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nexport default StartForm;\n","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/api/exam.js",["46"],"import axios from \"axios\";\n\nconst { REACT_APP_BE_URL } = process.env;\nexport const startExam = async (userData) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json\",\n\t\t},\n\t};\n\n\ttry {\n\t\tconst response = await axios.post(\n\t\t\t`${REACT_APP_BE_URL}/exams/start`,\n\t\t\tuserData,\n\t\t\tconfig\n\t\t);\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.log(\"Exam start error\", error.response);\n\t\treturn error.response.data;\n\t}\n};\n\nexport const sendAnswers = async (answers, examId) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-type\": \"application/json\",\n\t\t},\n\t};\n\n\ttry {\n\t\tconst response = await axios.post(\n\t\t\t`${REACT_APP_BE_URL}/exams/${examId}/answer`,\n\t\t\tanswers,\n\t\t\tconfig\n\t\t);\n\t\tconsole.log(\"response sending answer\", response.data);\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.log(\"Send Answers Error\", error);\n\t\treturn error.response.data;\n\t}\n};\n\nexport const getScore = async (examId) => {\n\tconst config = {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\t\"Access-Control-Allow-Origin\": \"*\",\n\t\t},\n\t};\n\n\ttry {\n\t\tconst response = await axios.get(`${REACT_APP_BE_URL}/exams/${examId}`);\n\t\tconsole.log(\"score\", response.data);\n\t\treturn response.data;\n\t} catch (error) {\n\t\tconsole.log(\"get score Error\", error);\n\t\treturn error.response.data;\n\t}\n};\n","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/helpers/messages.js",[],["47","48"],"/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/components/Questions/index.js",["49"],"import React, { useContext, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { sendAnswers, getScore } from \"../../api/exam\";\nimport ExamContext from \"../../contexts/ExamContext\";\nimport \"./questions.scss\";\n\nfunction Questions(props) {\n\tconst [page, setPage] = useState(0);\n\tconst [score, setScore] = useState(0);\n\tconst [answers, setAnswers] = useState([]);\n\tconst exam = useContext(ExamContext);\n\n\tconst questions = exam?.questions;\n\n\tconst handleTestAgain = () => {\n\t\tsetPage(0);\n\t\tsetAnswers([]);\n\t};\n\n\tconst handleAnswerClick = (e) => {\n\t\tconst selectedIndex = Number(e.target.id);\n\t\tconst currentQuestion = page;\n\n\t\tsetAnswers([\n\t\t\t...answers,\n\t\t\t{ question: currentQuestion, answer: selectedIndex },\n\t\t]);\n\n\t\tsetPage(page + 1);\n\t};\n\t//TODO One by one sent\n\tconst handleSubmitAnswers = async () => {\n\t\tconst resultForPost = await sendAnswers(answers, exam._id);\n\n\t\tconst resultScore = await getScore(exam._id);\n\t\tsetScore(resultScore.data.score);\n\t\tsetPage(page + 1);\n\t};\n\n\tconst showQuestion = () => {\n\t\treturn (\n\t\t\t<div className='question'>\n\t\t\t\t<h4 className='text-center'>{questions[page].text}</h4>\n\n\t\t\t\t<div className='answers'>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t{questions[page].answers.map((answer, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Col md={6}>\n\t\t\t\t\t\t\t\t\t\t<h5\n\t\t\t\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\t\t\t\tonClick={handleAnswerClick}\n\t\t\t\t\t\t\t\t\t\t\tclassName='single-answer'>\n\t\t\t\t\t\t\t\t\t\t\t{answer.text}\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\tconst showScore = () => {\n\t\treturn (\n\t\t\t<div className='question text-center'>\n\t\t\t\t<h1>\n\t\t\t\t\t{exam.candidateName},your score is: {score}\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst questionPage = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className='text-center'>Question {page + 1}/5</h1>\n\t\t\t\t{showQuestion()}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst submitPage = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1 className='text-center'>\n\t\t\t\t\tCongrats <strong>{exam.candidateName}</strong>! You've\n\t\t\t\t\tfinished the quiz\n\t\t\t\t</h1>\n\t\t\t\t<br />\n\t\t\t\t<div className='text-center mb-5'>\n\t\t\t\t\t<h4>If you are good with your answers submit them</h4>\n\t\t\t\t\t<button className='submit' onClick={handleSubmitAnswers}>\n\t\t\t\t\t\tSubmit Answers\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='text-center'>\n\t\t\t\t\t<h4 className='text-center'>\n\t\t\t\t\t\tYou can answer all the questions again\n\t\t\t\t\t</h4>\n\n\t\t\t\t\t<button className='again' onClick={handleTestAgain}>\n\t\t\t\t\t\tTest Again\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\treturn (\n\t\t<div className='quiz-page'>\n\t\t\t{page === 5\n\t\t\t\t? submitPage()\n\t\t\t\t: page === 6\n\t\t\t\t? showScore()\n\t\t\t\t: questionPage()}\n\t\t</div>\n\t);\n}\n\nexport default Questions;\n","/home/orhanors/Desktop/STRIVE/PROJECTS 2/Quiz Game/frontend/src/contexts/ExamContext.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":17,"column":8,"nodeType":"56","messageId":"57","endLine":17,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":46,"column":8,"nodeType":"56","messageId":"57","endLine":46,"endColumn":14},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},{"ruleId":"54","severity":1,"message":"61","line":33,"column":9,"nodeType":"56","messageId":"57","endLine":33,"endColumn":22},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'exam' is assigned a value but never used.","Identifier","unusedVar","'config' is assigned a value but never used.",["62"],["63"],"'resultForPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]